import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import './dashboard.css';

const ReportsPage = () => {
  const [reports, setReports] = useState([]);
  const [loading, setLoading] = useState(true);
  const [filter, setFilter] = useState('all');

  useEffect(() => {
    // TODO: Fetch reports from API
    // Mock data for now
    const mockReports = [
      {
        _id: '1',
        type: 'sales',
        title: 'Monthly Sales Report',
        description: 'Sales performance for May 2023',
        generatedBy: 'Admin User',
        createdAt: '2023-05-15T10:30:00Z'
      },
      {
        _id: '2',
        type: 'performance',
        title: 'Order Performance Report',
        description: 'Order status distribution and metrics',
        generatedBy: 'Admin User',
        createdAt: '2023-05-10T14:20:00Z'
      },
      {
        _id: '3',
        type: 'stall-ranking',
        title: 'Stall Ranking Report',
        description: 'Performance ranking of all stalls',
        generatedBy: 'Admin User',
        createdAt: '2023-05-05T09:15:00Z'
      }
    ];

    setTimeout(() => {
      setReports(mockReports);
      setLoading(false);
    }, 1000);
  }, []);

  const filteredReports = filter === 'all' 
    ? reports 
    : reports.filter(report => report.type === filter);

  const getReportTypeIcon = (type) => {
    switch (type) {
      case 'sales':
        return '💰';
      case 'performance':
        return '📊';
      case 'stall-ranking':
        return '🏆';
      default:
        return '📄';
    }
  };

  if (loading) {
    return <div className="reports-page">Loading reports...</div>;
  }

  return (
    <div className="reports-page">
      <div className="reports-header">
        <h1>Reports & Analytics</h1>
        <div className="reports-controls">
          <select 
            value={filter} 
            onChange={(e) => setFilter(e.target.value)}
            className="filter-select"
          >
            <option value="all">All Reports</option>
            <option value="sales">Sales Reports</option>
            <option value="performance">Performance Reports</option>
            <option value="stall-ranking">Stall Ranking</option>
          </select>
          <button className="generate-report-btn">Generate New Report</button>
        </div>
      </div>

      <div className="reports-grid">
        {filteredReports.map(report => (
          <div key={report._id} className="report-card">
            <div className="report-header">
              <div className="report-icon">
                {getReportTypeIcon(report.type)}
              </div>
              <div className="report-info">
                <h3>{report.title}</h3>
                <p>{report.description}</p>
              </div>
            </div>
            <div className="report-meta">
              <p>Generated by: {report.generatedBy}</p>
              <p>Date: {new Date(report.createdAt).toLocaleDateString()}</p>
            </div>
            <div className="report-actions">
              <Link to={`/reports/${report._id}`} className="view-report-btn">
                View Report
              </Link>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default ReportsPage;