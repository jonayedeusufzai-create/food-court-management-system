import React, { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import './dashboard.css';

const ReportDetailsPage = () => {
  const { reportId } = useParams();
  const [report, setReport] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // TODO: Fetch report details from API
    // Mock data for now
    const mockReport = {
      _id: reportId,
      type: 'sales',
      title: 'Monthly Sales Report - May 2023',
      description: 'Sales performance report with revenue by stall and date',
      generatedBy: 'Admin User',
      createdAt: '2023-05-15T10:30:00Z',
      data: {
        totalSales: 2456.78,
        totalOrders: 124,
        averageOrderValue: 19.81,
        salesByStall: {
          'Burger Palace': 1250.50,
          'Pizza Corner': 980.25,
          'Sushi Bar': 820.75,
          'Indian Spice': 650.30
        },
        salesByDate: {
          '2023-05-01': 120.50,
          '2023-05-02': 180.75,
          '2023-05-03': 95.25,
          '2023-05-04': 210.00
        }
      }
    };

    setTimeout(() => {
      setReport(mockReport);
      setLoading(false);
    }, 1000);
  }, [reportId]);

  if (loading) {
    return <div className="report-details-page">Loading report...</div>;
  }

  if (!report) {
    return <div className="report-details-page">Report not found</div>;
  }

  return (
    <div className="report-details-page">
      <div className="report-header">
        <Link to="/reports" className="back-link">‚Üê Back to Reports</Link>
        <h1>{report.title}</h1>
        <p>{report.description}</p>
      </div>

      <div className="report-meta">
        <p>Generated by: {report.generatedBy}</p>
        <p>Date: {new Date(report.createdAt).toLocaleDateString()}</p>
      </div>

      <div className="report-content">
        <div className="report-section">
          <h2>Summary</h2>
          <div className="summary-stats">
            <div className="stat-card">
              <h3>Total Sales</h3>
              <p className="stat-value">${report.data.totalSales.toFixed(2)}</p>
            </div>
            <div className="stat-card">
              <h3>Total Orders</h3>
              <p className="stat-value">{report.data.totalOrders}</p>
            </div>
            <div className="stat-card">
              <h3>Avg. Order Value</h3>
              <p className="stat-value">${report.data.averageOrderValue.toFixed(2)}</p>
            </div>
          </div>
        </div>

        <div className="report-section">
          <h2>Sales by Stall</h2>
          <div className="data-table">
            <table>
              <thead>
                <tr>
                  <th>Stall Name</th>
                  <th>Revenue</th>
                </tr>
              </thead>
              <tbody>
                {Object.entries(report.data.salesByStall).map(([stall, revenue]) => (
                  <tr key={stall}>
                    <td>{stall}</td>
                    <td>${revenue.toFixed(2)}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        <div className="report-section">
          <h2>Sales by Date</h2>
          <div className="data-table">
            <table>
              <thead>
                <tr>
                  <th>Date</th>
                  <th>Revenue</th>
                </tr>
              </thead>
              <tbody>
                {Object.entries(report.data.salesByDate).map(([date, revenue]) => (
                  <tr key={date}>
                    <td>{new Date(date).toLocaleDateString()}</td>
                    <td>${revenue.toFixed(2)}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ReportDetailsPage;